<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aidex.shadd.product.mapper.TProductMapper">

    <sql id="tProductColumns">
        a.minerals as "minerals",

        a.specification as "specification",

        a.remark as "remark",

        a.id as "id",

        a.create_by as "createBy",

        a.create_dept as "createDept",

        a.create_time as "createTime",

        a.update_by as "updateBy",

        a.update_time as "updateTime",

        a.update_ip as "updateIp",

        a.version as "version",

        a.del_flag as "delFlag"

    </sql>

    <sql id="tProductJoins">
    </sql>

    <select id="get" resultType="TProduct">
        SELECT
            <include refid="tProductColumns"/>
        FROM t_product a
        <include refid="tProductJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="queryTProductById" resultType="TProduct">
        SELECT
        <include refid="tProductColumns"/>
        FROM t_product a
        <include refid="tProductJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="TProduct">
        SELECT
            <include refid="tProductColumns"/>
        FROM t_product a
        <include refid="tProductJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="minerals != null and minerals != ''">
                and a.minerals like concat('%', #{minerals}, '%')
            </if>
            <if test="specification != null and specification != ''">
                and a.specification like concat('%', #{specification}, '%')
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderByColumn != null and page.orderByColumn != ''">
                ORDER BY ${page.orderByColumn}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="queryListOrBy" resultType="TProduct">
        SELECT
        <include refid="tProductColumns"/>
        FROM t_product a
        <include refid="tProductJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="minerals != null and minerals != ''">
                and (a.minerals like concat('%', #{minerals}, '%')
                or a.specification like concat('%', #{minerals}, '%'))
            </if>

        </where>
        <choose>
            <when test="page !=null and page.orderByColumn != null and page.orderByColumn != ''">
                ORDER BY ${page.orderByColumn}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="findListWithUnique" resultType="TProduct">
        SELECT
            a.id
        FROM t_product a
        <include refid="tProductJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="notEqualId != null and notEqualId != ''">
                AND id != #{notEqualId}
            </if>
        </where>
    </select>


    <insert id="insert">
        INSERT INTO t_product(
            minerals,

            specification,
            remark,

            id,

            create_by,

            create_dept,

            create_time,

            update_by,

            update_time,

            update_ip,

            version,

            del_flag

        ) VALUES (
            #{minerals},

            #{specification},

            #{remark},

            #{id},

            #{createBy},

            #{createDept},

            #{createTime},

            #{updateBy},

            #{updateTime},

            #{updateIp},

            #{version},

            #{delFlag}

        )
    </insert>

    <update id="update">
        UPDATE t_product SET
            minerals = #{minerals},
            specification = #{specification},
            remark = #{remark},
            update_by = #{updateBy},
            update_time = #{updateTime},
            update_ip = #{updateIp},
            version = version + 1
        WHERE id = #{id} and version = #{version}
    </update>

    <update id="updateStatus">
        UPDATE t_product SET
            status = #{status},
            version = version + 1
        WHERE id = #{id}
    </update>

    <update id="delete">
        UPDATE t_product SET
            del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>

    <delete id="deleteTProductByIds">
        UPDATE t_product SET
            del_flag = '1'
        WHERE id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>